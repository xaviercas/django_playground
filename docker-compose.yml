version: '3'

services:

  db:
    restart: always
    environment:
      POSTGRES_PASSWORD: db_password
      POSTGRES_USER: db_user
      POSTGRES_DB: db_database
    build:
      context: .
      dockerfile: Dockerfile_Postgres
    image: webapp:db
    volumes:
      - ./db_data:/var/lib/postgresql/data/
    networks:
      - backend

  app:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile_Python
    image: webapp:app    
    volumes:
      - ./playground:/code/
    # command: python3 manage.py runserver 0.0.0.0:8000
    command: gunicorn playground.wsgi -b 0.0.0.0:8000
    networks:
      - backend
      - frontend
    expose:
      - "8000"
    depends_on:
      - db

  http:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile_Nginx
    image: webapp:http
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    networks:
      - frontend
    depends_on:
      - app

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge