# From:
# http://docs.gunicorn.org/en/latest/deploy.html#nginx-configuration

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  # increase if you have lots of clients
  worker_connections   1024; 
  # set to 'on' if nginx worker_processes > 1
  accept_mutex off; 
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}


http {
  include           /etc/nginx/mime.types;
  default_type      application/octet-stream;

  # Log
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log          /var/log/nginx/access.log  main;

  sendfile            on;
  #tcp_nopush         on;
  keepalive_timeout   65;
  #gzip  on;

  # Config for application server
  # fail_timeout=0 means we always retry an upstream 
  # even if it failed to return a good HTTP response
  upstream app_server {
    # for UNIX domain socket setups
    # server          unix:/tmp/gunicorn.sock fail_timeout=0;
    # for a TCP configuration
    server            app:8000 fail_timeout=0;
  }

  # Nginx config
  server {

    listen 80;

    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name localhost;

    # path for static files
    # root /path/to/app/current/public;

    # location / {
    # checks for static file, if not found proxy to app
    # try_files $uri @proxy_to_app;
    # }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    error_page 500 502 503 504 /500.html;

    location = /500.html {
      root /path/to/app/current/public;
    }
  }
  include /etc/nginx/conf.d/*.conf;

}